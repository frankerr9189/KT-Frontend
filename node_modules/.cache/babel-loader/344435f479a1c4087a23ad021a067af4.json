{"ast":null,"code":"import { API } from \"../config\";\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const read = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/**\n  * perform crud on products\n  * get all products\n  * get a single product\n  * update single product\n  * delete single product\n  */\n//undefined returns all, a number will restrict it to that limit\n\nexport const getProducts = () => {\n  return fetch(`${API}/products?limit=undefined`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getBraintreeClientToken = (userId, token) => {\n  return fetch(`${API}/braintree/getToken/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPayment = (userId, token, paymentData) => {\n  return fetch(`${API}/braintree/payment/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentData)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createOrder = (userId, token, createOrderData) => {\n  return fetch(`${API}/order/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      order: createOrderData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/order/list/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getBraintreeClientTokenGuest = () => {\n  return fetch(`${API}/braintree/getGuestToken`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPaymentGuest = paymentData => {\n  return fetch(`${API}/braintree/payment`, {\n    method: \"POST\",\n    body: JSON.stringify(paymentData)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const guestCreateOrder = createOrderData => {\n  return fetch(`${API}/order/create/guest`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      order: createOrderData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/admin/adminApi.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createProduct","product","getCategories","read","productId","getProducts","deleteProduct","getProduct","updateProduct","getBraintreeClientToken","processPayment","paymentData","createOrder","createOrderData","order","listOrders","getStatusValues","updateOrderStatus","orderId","status","getBraintreeClientTokenGuest","processPaymentGuest","guestCreateOrder"],"mappings":"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","sourcesContent":["import {API} from \"../config\";\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`,{\n         method: 'POST',\n         headers:{\n             Accept: 'application/json',\n             'Content-Type': 'application/json',\n             Authorization: `Bearer ${token}`\n         },\n         body: JSON.stringify(category)\n     })\n     .then(response=> {\n         return response.json();\n     })\n     .catch(err=> {\n         console.log(err);\n     });\n };\n\n export const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`,{\n         method: 'POST',\n         headers:{\n             Accept: 'application/json',\n             Authorization: `Bearer ${token}`\n         },\n         body: product\n     })\n     .then(response=> {\n         return response.json();\n     })\n     .catch(err=> {\n         console.log(err);\n     });\n };\n\n export const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const read = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\n\n/**\n  * perform crud on products\n  * get all products\n  * get a single product\n  * update single product\n  * delete single product\n  */\n//undefined returns all, a number will restrict it to that limit\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"DELETE\",\n        headers:{\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const getProduct = (productId) => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"PUT\",\n        headers:{\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers:{\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers:{\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers:{\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({order: createOrderData})\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: \"GET\",\n        headers:{\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: \"GET\",\n        headers:{\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: \"PUT\",\n        headers:{\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({status, orderId})\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const getBraintreeClientTokenGuest = () => {\n    return fetch(`${API}/braintree/getGuestToken`, {\n        method: \"GET\",\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const processPaymentGuest = (paymentData) => {\n    return fetch(`${API}/braintree/payment`, {\n        method: \"POST\",\n        body: JSON.stringify(paymentData)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};\n\nexport const guestCreateOrder = (createOrderData) => {\n    return fetch(`${API}/order/create/guest`, {\n        method: \"POST\",\n        body: JSON.stringify({order: createOrderData})\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err=> console.log(err));\n};"]},"metadata":{},"sourceType":"module"}