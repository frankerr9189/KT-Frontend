{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/user/AdminOrders.js\";\nimport React from 'react';\nimport { Navbar } from '../Navar/Navbar';\nimport { Banner } from \"../Banner/Banner\";\nimport { GlobalStyle } from \"../Styles/GlobalStyle\";\n\nfunction AdminOrders() {\n  const Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [statusValues, setStatusValues] = useState([]);\n    const {\n      user,\n      token\n    } = isAuthenticated();\n    const ordersToProcess = orders.filter(order => order.status !== 'Completed' && order.status !== 'Cancelled');\n\n    const loadOrders = () => {\n      listOrders(user._id, token).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setOrders(data);\n        }\n      });\n    };\n\n    const loadStatusValues = () => {\n      getStatusValues(user._id, token).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setStatusValues(data);\n        }\n      });\n    };\n\n    useEffect(() => {\n      loadOrders();\n      loadStatusValues();\n    }, []);\n\n    const showOrdersLength = () => {\n      if (orders.length > 0) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, \"Total Orders: \", ordersToProcess.length);\n      } else {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 24\n          }\n        }, \"No orders\");\n      }\n    };\n\n    const showInput = (key, value) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2 mr-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, key)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: value,\n      className: \"form-control\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n\n    const handleStatusChange = (e, orderId) => {\n      updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n        if (data.error) {\n          console.log('Status update failed');\n        } else {\n          loadOrders();\n        }\n      });\n    };\n\n    const showStatus = o => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mark mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Status: \", o.status), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: e => handleStatusChange(e, o._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Update Status\"), statusValues.map((status, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, status)), \";\"));\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      title: \"Orders\" // description = {`${name}` Manage below orders...}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, showOrdersLength(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-orders\",\n      className: \"content-margined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \"Delivery Method\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"Items\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, ordersToProcess.map((o, oIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: oIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, o._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, moment(o.createdAt).fromNow()), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, o.user.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, new Intl.NumberFormat(\"en-GB\", {\n      style: \"currency\",\n      currency: \"USD\"\n    }).format(o.amount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, o.method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, showStatus(o)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, o.products.map((p, pIndex) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4\",\n      key: pIndex,\n      style: {\n        padding: '10px',\n        border: '1px solid indigo'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, showInput('Product name', p.name), showInput('Product total', p.count))))))))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Banner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default AdminOrders;","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/user/AdminOrders.js"],"names":["React","Navbar","Banner","GlobalStyle","AdminOrders","Orders","orders","setOrders","useState","statusValues","setStatusValues","user","token","isAuthenticated","ordersToProcess","filter","order","status","loadOrders","listOrders","_id","then","data","error","console","log","loadStatusValues","getStatusValues","useEffect","showOrdersLength","length","showInput","key","value","handleStatusChange","e","orderId","updateOrderStatus","target","showStatus","o","map","index","oIndex","moment","createdAt","fromNow","name","Intl","NumberFormat","style","currency","format","amount","method","products","p","pIndex","padding","border","count"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Navbar} from '../Navar/Navbar';\nimport {Banner} from \"../Banner/Banner\";\nimport {GlobalStyle} from \"../Styles/GlobalStyle\";\n\n\nfunction AdminOrders() {\n    const Orders = () =>{\n        const [orders, setOrders] = useState([]);\n        const [statusValues, setStatusValues] = useState([]);\n        const {user, token} = isAuthenticated();\n    \n        const ordersToProcess = orders.filter(\n            (order) => (order.status !== 'Completed' && order.status!== 'Cancelled'))\n            \n        const loadOrders = () => {\n            listOrders(user._id, token).then(data => {\n                if(data.error){\n                    console.log(data.error);\n                } else {\n                    setOrders(data);\n                }\n            });\n        };\n    \n        const loadStatusValues = () => {\n            getStatusValues(user._id, token).then(data => {\n                if(data.error){\n                    console.log(data.error);\n                } else {\n                    setStatusValues(data);\n                }\n            });\n        };\n    \n        useEffect(()=>{\n            loadOrders();\n            loadStatusValues();\n        }, []);\n    \n        const showOrdersLength = () => {\n            if(orders.length>0){\n                return(\n                    <h1 className=\"text-danger\">\n                        Total Orders: {ordersToProcess.length}\n                        </h1>\n                );\n            } else {\n                return <h1 className=\"text-danger\">No orders</h1>;\n            }\n        };\n    \n        const showInput = (key, value) => (\n            <div className=\"input-group mb-2 mr-sm-2\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">{key}\n                    </div>\n                </div>\n                <input \n                type=\"text\" \n                value={value} \n                className=\"form-control\" \n                readOnly>\n                </input>\n            </div>\n     );\n    \n        const handleStatusChange = (e, orderId) => {\n            updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n                if(data.error){\n                    console.log('Status update failed')\n                }else{\n                    loadOrders();\n                }\n            });\n        };\n            \n        const showStatus = (o) => (\n            <div className=\"form-group\">\n                <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n                <select \n                className=\"form-control\" \n                onChange={e => handleStatusChange(e, o._id)}>\n                    <option>Update Status</option>\n                    {statusValues.map((status, index) => (\n                        <option key={index} value={status}>\n                        {status}\n                        </option>\n                        ))};\n                </select>\n            </div>\n        );\n     \n        return (\n            <Layout title =\"Orders\" \n           // description = {`${name}` Manage below orders...}\n            >\n                    {showOrdersLength()}\n                <div className=\"profile-orders\" className=\"content-margined\">\n                {\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                            <th>ID</th>\n                            <th>Date</th>\n                            <th>Name</th>\n                            <th>Total</th>\n                            <th>Delivery Method</th>\n                            <th>Status</th>\n                            <th>Items</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                                {ordersToProcess.map((o, oIndex) => <tr key={oIndex}>\n                                    <td>{o._id}</td>\n                                    <td>{moment(o.createdAt).fromNow()}</td>\n                                    <td>{o.user.name}</td>\n                                    <td>{new Intl.NumberFormat(\"en-GB\", {\n                                style: \"currency\",\n                                currency: \"USD\"\n                            }).format(o.amount)}</td>\n                                    <td>{o.method}</td>\n                                    <td>{showStatus(o)}</td>\n                                    <td>\n                                    {o.products.map ((p, pIndex) => (\n                                        <div \n                                        className=\"mb-4\" \n                                        key={pIndex} \n                                        style={{\n                                            padding: '10px', \n                                            border: '1px solid indigo'}}>\n                                            {showInput('Product name', p.name)}\n                                            {showInput('Product total', p.count)}\n                                        </div>\n                                    ))}\n                                    </td>\n                                </tr>)}\n                            </tbody>\n                    </table>            }\n            </div>\n            </Layout>\n        );\n    };\n  return (\n    <>\n    <GlobalStyle/>\n    <Navbar/>\n    <Banner/>\n   </>\n  );\n}\n\nexport default AdminOrders;\n"]},"metadata":{},"sourceType":"module"}