{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/user/AdminOrders.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Navbar } from '../Navar/Navbar';\nimport { Banner } from \"../Banner/Banner\";\nimport { GlobalStyle } from \"../Styles/GlobalStyle\";\nimport styled from 'styled-components';\nimport { isAuthenticated } from '../auth';\nimport { listOrders, getStatusValues, updateOrderStatus } from \"../admin/adminApi\";\nimport moment from 'moment';\nimport { getPrice } from \"../FoodDialog/FoodDialog\";\nconst OrderContainer = styled.div`\n    padding: 10px 0px;\n    border-bottom: 1px solid grey;\n`;\n\nfunction AdminOrders() {\n  const [orders, setOrders] = useState([]);\n  const [statusValues, setStatusValues] = useState([]);\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  const ordersToProcess = orders.filter(order => order.status !== 'Completed' && order.status !== 'Cancelled');\n\n  const loadOrders = () => {\n    listOrders(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  const loadStatusValues = () => {\n    getStatusValues(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setStatusValues(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadOrders();\n    loadStatusValues();\n  }, []);\n\n  const showOrdersLength = () => {\n    if (orders.length > 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"Total Orders: \", ordersToProcess.length);\n    } else {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }\n      }, \"No orders\");\n    }\n  };\n\n  const showInput = (key, value) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-2 mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, key)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    className: \"form-control\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }));\n\n  const handleStatusChange = (e, orderId) => {\n    updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n      if (data.error) {\n        console.log('Status update failed');\n      } else {\n        loadOrders();\n      }\n    });\n  };\n\n  const showStatus = o => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mark mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Status: \", o.status), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    onChange: e => handleStatusChange(e, o._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Update Status\"), statusValues.map((status, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, status)), \";\"));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Banner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), showOrdersLength(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-orders\",\n    className: \"content-margined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Delivery Method\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Items\"), \"                            \")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, ordersToProcess.map((o, oIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: oIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '5px',\n      border: '1px solid indigo'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, o._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, moment(o.createdAt).fromNow()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, o.user.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, '$', o.totalPrice.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, o.method), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, showStatus(o)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, o.orderItems.map((p, pIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    key: pIndex,\n    style: {\n      padding: '5px',\n      border: '1px solid indigo'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 41\n    }\n  }, showInput('Product name', p.name), showInput('Product total', p.quantity)))))))))), \");\");\n}\n\nexport default AdminOrders;","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/user/AdminOrders.js"],"names":["React","useState","useEffect","Navbar","Banner","GlobalStyle","styled","isAuthenticated","listOrders","getStatusValues","updateOrderStatus","moment","getPrice","OrderContainer","div","AdminOrders","orders","setOrders","statusValues","setStatusValues","user","token","ordersToProcess","filter","order","status","loadOrders","_id","then","data","error","console","log","loadStatusValues","showOrdersLength","length","showInput","key","value","handleStatusChange","e","orderId","target","showStatus","o","map","index","oIndex","padding","border","createdAt","fromNow","name","totalPrice","toFixed","method","orderItems","p","pIndex","quantity"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {Navbar} from '../Navar/Navbar';\nimport {Banner} from \"../Banner/Banner\";\nimport {GlobalStyle} from \"../Styles/GlobalStyle\";\nimport styled from 'styled-components';\nimport {isAuthenticated} from '../auth';\nimport {listOrders, getStatusValues, updateOrderStatus} from \"../admin/adminApi\";\nimport moment from 'moment';\nimport {getPrice} from \"../FoodDialog/FoodDialog\";\n\nconst OrderContainer = styled.div`\n    padding: 10px 0px;\n    border-bottom: 1px solid grey;\n`\n\nfunction AdminOrders() {\n        const [orders, setOrders] = useState([]);\n        const [statusValues, setStatusValues] = useState([]);\n        const {user, token} = isAuthenticated();\n    \n        const ordersToProcess = orders.filter(\n            (order) => (order.status !== 'Completed' && order.status!== 'Cancelled'))\n            \n        const loadOrders = () => {\n            listOrders(user._id, token).then(data => {\n                if(data.error){\n                    console.log(data.error);\n                } else {\n                    setOrders(data);\n                }\n            });\n        };\n    \n        const loadStatusValues = () => {\n            getStatusValues(user._id, token).then(data => {\n                if(data.error){\n                    console.log(data.error);\n                } else {\n                    setStatusValues(data);\n                }\n            });\n        };\n    \n        useEffect(()=>{\n            loadOrders();\n            loadStatusValues();\n        }, []);\n    \n        const showOrdersLength = () => {\n            if(orders.length>0){\n                return(\n                    <h1 className=\"text-danger\">\n                        Total Orders: {ordersToProcess.length}\n                        </h1>\n                );\n            } else {\n                return <h1 className=\"text-danger\">No orders</h1>;\n            }\n        };\n    \n        const showInput = (key, value) => (\n            <div className=\"input-group mb-2 mr-sm-2\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">{key}\n                    </div>\n                </div>\n                <input \n                type=\"text\" \n                value={value} \n                className=\"form-control\" \n                readOnly>\n                </input>\n            </div>\n     );\n    \n        const handleStatusChange = (e, orderId) => {\n            updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n                if(data.error){\n                    console.log('Status update failed')\n                }else{\n                    loadOrders();\n                }\n            });\n        };\n            \n        const showStatus = (o) => (\n            <div className=\"form-group\">\n                <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n                <select \n                className=\"form-control\" \n                onChange={e => handleStatusChange(e, o._id)}>\n                    <option>Update Status</option>\n                    {statusValues.map((status, index) => (\n                        <option key={index} value={status}>\n                        {status}\n                        </option>\n                        ))};\n                </select>\n            </div>\n        );\n\n    return (\n    <>\n    <GlobalStyle/>\n    <Navbar/>\n    <Banner/>\n    {showOrdersLength()}\n                <div className=\"profile-orders\" className=\"content-margined\">\n                {\n                    <table className=\"table\">\n                        <thead >\n                            <tr >\n                            <th>ID</th>\n                            <th>Date</th>\n                            <th>Name</th>\n                            <th>Total</th>\n                            <th>Delivery Method</th>\n                            <th>Status</th>\n                            <th>Items</th>                            </tr>\n                            </thead>\n                            <tbody>\n                                {ordersToProcess.map((o, oIndex) => <tr key={oIndex}>\n                                    <div style={{\n                                            padding: '5px', \n                                            border: '1px solid indigo'}}>\n                                    <td>{o._id}</td>\n                                    <td>{moment(o.createdAt).fromNow()}</td>\n                                    <td>{o.user.name}</td>\n                                    <td>{'$'}{o.totalPrice.toFixed(2)}</td>\n                                    <td>{o.method}</td>\n                                    <td>{showStatus(o)}</td>\n                                    <td>\n                                    {o.orderItems.map ((p, pIndex) => (\n                                        <div \n                                        className=\"mb-4\" \n                                        key={pIndex} \n                                        style={{\n                                            padding: '5px', \n                                            border: '1px solid indigo'}}>\n                                            {showInput('Product name', p.name)}\n                                            {showInput('Product total', p.quantity)}\n                                        </div>\n                                    ))}\n                                    </td>\n                                    </div>\n                                </tr>)}\n                            </tbody>\n                    </table>            }\n            </div>\n        );\n   </>\n  );\n}\n\nexport default AdminOrders;\n"]},"metadata":{},"sourceType":"module"}