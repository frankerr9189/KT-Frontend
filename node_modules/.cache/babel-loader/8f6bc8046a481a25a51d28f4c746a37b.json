{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/user/CategoryDialog.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DashLabel } from './dashlinkhelper';\nimport { seaBlue } from '../Styles/colors';\nimport { Title } from '../Styles/title';\nimport { createCategory } from '../admin/adminApi';\nimport { isAuthenticated } from '../auth';\nconst CDialog = styled.div`\nwidth: 500px;\nbackground-color: white;\nposition: fixed;\ntop: 80px;\nz-index: 5;\nmax-height: calc(100% - 100px);\nleft: calc(50% - 250px);\ndisplay: flex;\nflex-direction: column;\n`;\nconst CDialogShadow = styled.div`\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    top: 0px;\n    background-color: black;\n    opacity: 0.7;\n    z-index: 4;\n`;\nconst CDialogContent = styled.div`\noverflow: auto; \nmin-height: 200px;\npadding: 0px 40px;\npadding-bottom: 80px;\n`;\nexport const ConfirmButton = styled(Title)`\nmargin: 10px;\ncolor: white;\nheight: 20px;\nborder-radius: 5px;\npadding: 10px;\ntext-align: center;\nwidth: 200px;\ncursor: pointer;\nbackground-color: ${seaBlue};\n${({\n  disabled\n}) => disabled && `\nopacity: .5;\nbackground-color: grey;\npointer-events: none;\n`}\n`;\nconst CDialogFooter = styled.div`\nbox-shadow: 0px -2px 20px 0px grey;\nheight: 60px;\ndisplay: flex;\njustify-content: center;\n`;\nconst CDashBanner = styled.div`\nmin-height: 200px;\nmargin-bottom: 20px;\nbackground-image: url(\"img/shark.jpeg\");\nbackground-position: center;\nbackground-size: cover;\n`;\nconst CDashBannerLabel = styled(DashLabel)`\n    top: 90px;\n    font-size: 30px;\n    padding: 5px 40px;\n`;\nexport function CatDialog({\n  categoryWin,\n  setCategoryWin\n}) {\n  const [name, setName] = useState('');\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false); // destructure user and token from localstorage\n\n  const {\n    user,\n    token\n  } = isAuthenticated();\n\n  const handleChange = e => {\n    setError('');\n    setName(e.target.value);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(false); //make request to api to create category\n\n    createCategory(user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n        setName(\"\");\n      }\n    });\n  };\n\n  const newCategoryForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: clickSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Category name to add: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Create Category\"));\n\n  const showSuccess = () => {\n    if (success) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 20\n        }\n      }, name, \" has been created!\");\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 20\n        }\n      }, \"Category needs to be unique.\");\n    }\n  };\n\n  function close() {\n    setCategoryWin();\n  }\n\n  if (!categoryWin) return null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CDialogShadow, {\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CDashBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CDashBannerLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, categoryWin)), /*#__PURE__*/React.createElement(CDialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, showSuccess(), showError(), newCategoryForm()), /*#__PURE__*/React.createElement(CDialogFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/user/CategoryDialog.js"],"names":["React","useState","styled","DashLabel","seaBlue","Title","createCategory","isAuthenticated","CDialog","div","CDialogShadow","CDialogContent","ConfirmButton","disabled","CDialogFooter","CDashBanner","CDashBannerLabel","CatDialog","categoryWin","setCategoryWin","name","setName","error","setError","success","setSuccess","user","token","handleChange","e","target","value","clickSubmit","preventDefault","_id","then","data","newCategoryForm","showSuccess","showError","close"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { DashLabel } from './dashlinkhelper';\nimport {seaBlue} from '../Styles/colors';\nimport {Title} from '../Styles/title';\nimport {createCategory} from '../admin/adminApi';\nimport {isAuthenticated} from '../auth';\n\nconst CDialog = styled.div`\nwidth: 500px;\nbackground-color: white;\nposition: fixed;\ntop: 80px;\nz-index: 5;\nmax-height: calc(100% - 100px);\nleft: calc(50% - 250px);\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst CDialogShadow = styled.div`\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    top: 0px;\n    background-color: black;\n    opacity: 0.7;\n    z-index: 4;\n`\n\nconst CDialogContent = styled.div`\noverflow: auto; \nmin-height: 200px;\npadding: 0px 40px;\npadding-bottom: 80px;\n`;\n\nexport const ConfirmButton = styled(Title)`\nmargin: 10px;\ncolor: white;\nheight: 20px;\nborder-radius: 5px;\npadding: 10px;\ntext-align: center;\nwidth: 200px;\ncursor: pointer;\nbackground-color: ${seaBlue};\n${({disabled}) => disabled &&\n`\nopacity: .5;\nbackground-color: grey;\npointer-events: none;\n`}\n`;\n\nconst CDialogFooter = styled.div`\nbox-shadow: 0px -2px 20px 0px grey;\nheight: 60px;\ndisplay: flex;\njustify-content: center;\n`;\n\n\n\nconst CDashBanner = styled.div`\nmin-height: 200px;\nmargin-bottom: 20px;\nbackground-image: url(\"img/shark.jpeg\");\nbackground-position: center;\nbackground-size: cover;\n`;\n\nconst CDashBannerLabel= styled(DashLabel)`\n    top: 90px;\n    font-size: 30px;\n    padding: 5px 40px;\n`\n\nexport function CatDialog({categoryWin , setCategoryWin}){\n    const [name, setName] = useState('');\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const {user, token} = isAuthenticated();\n\n    const handleChange = e => {\n        setError('')\n        setName(e.target.value)\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        //make request to api to create category\n        createCategory(user._id, token, {name})\n        .then(data => {\n            if(data.error){\n                setError(data.error);\n            }else {\n                setError(\"\");\n                setSuccess(true);\n                setName(\"\");\n            }\n        });\n    };\n\n    const newCategoryForm = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category name to add: </label>\n                <input \n                type=\"text\" \n                className=\"form-control\" \n                onChange={handleChange} \n                value={name}\n                autoFocus\n                required/>\n                </div>\n                <button className=\"btn btn-outline-primary\">Create Category</button>\n        </form>\n    );\n\n    const showSuccess = () => {\n        if(success){\n            return <h3 className=\"text-success\">{name} has been created!</h3>\n        }\n    };\n\n    const showError = () => {\n        if(error){\n            return <h3 className=\"text-danger\">Category needs to be unique.</h3>\n        }\n    };\n\n    function close() {\n        setCategoryWin();\n    }\n\n\n    if(!categoryWin) return null;\n    return (\n     <>\n    <CDialogShadow onClick={close}/>\n    <CDialog>\n        <CDashBanner>\n            <CDashBannerLabel>\n                {categoryWin}\n            </CDashBannerLabel>\n        </CDashBanner>\n        <CDialogContent>\n                     {showSuccess()}\n                    {showError()}\n                    {newCategoryForm()}\n        </CDialogContent>\n        <CDialogFooter>\n        </CDialogFooter>\n    </CDialog>\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}