{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/user/AdminOrders.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Navbar } from '../Navar/Navbar';\nimport { Banner } from \"../Banner/Banner\";\nimport { GlobalStyle } from \"../Styles/GlobalStyle\";\nimport styled from 'styled-components';\nimport { isAuthenticated } from '../auth';\nimport { listOrders, getStatusValues, updateOrderStatus } from \"../admin/adminApi\";\nimport moment from 'moment';\nimport { getPrice } from \"../FoodDialog/FoodDialog\"; //import Table from 'react-bootstrap/Table'\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nconst OrderContainer = styled.div`\n    padding: 10px 0px;\n    border-bottom: 1px solid grey;\n`;\n\nfunction AdminOrders() {\n  const [orders, setOrders] = useState([]);\n  const [statusValues, setStatusValues] = useState([]);\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  const ordersToProcess = orders.filter(order => order.status !== 'Completed' && order.status !== 'Cancelled');\n\n  const loadOrders = () => {\n    listOrders(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  const loadStatusValues = () => {\n    getStatusValues(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setStatusValues(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadOrders();\n    loadStatusValues();\n  }, []);\n\n  const showOrdersLength = () => {\n    if (orders.length > 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \"Total Orders: \", ordersToProcess.length);\n    } else {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 24\n        }\n      }, \"No orders\");\n    }\n  };\n\n  const showInput = (key, value) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-2 mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, key)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    className: \"form-control\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }));\n\n  const handleStatusChange = (e, orderId) => {\n    updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n      if (data.error) {\n        console.log('Status update failed');\n      } else {\n        loadOrders();\n      }\n    });\n  };\n\n  const showStatus = o => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mark mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Status: \", o.status), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    onChange: e => handleStatusChange(e, o._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Update Status\"), statusValues.map((status, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, status)), \";\"));\n\n  function CustomizedTables() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Order #\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Delivery Address\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Delivery Method\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"Items\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Quantity\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, ordersToProcess.map((o, oIndex) => /*#__PURE__*/React.createElement(StyledTableRow, {\n      key: oIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, o._id), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, moment(o.createdAt).fromNow()), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, o.ShipName), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, o.ShipAddress, \" \", o.ShipCity, \" \", o.ShipState, \" \", o.ShipZip)), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, '$', o.totalPrice.toFixed(2)), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, o.method), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }, showStatus(o)), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    }, o.orderItems.map((p, pIndex) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4\",\n      key: pIndex,\n      style: {\n        padding: '5px',\n        border: '1px solid indigo'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, ('Product name', p.name)))), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, o.orderItems.map((p, pIndex) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4\",\n      key: pIndex,\n      style: {\n        padding: '5px',\n        border: '1px solid indigo'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, ('Product Quantity', p.quantity)))))))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Banner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }), showOrdersLength(), CustomizedTables(), \");\");\n}\n\nexport default AdminOrders;","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/user/AdminOrders.js"],"names":["React","useState","useEffect","Navbar","Banner","GlobalStyle","styled","isAuthenticated","listOrders","getStatusValues","updateOrderStatus","moment","getPrice","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","OrderContainer","div","AdminOrders","orders","setOrders","statusValues","setStatusValues","user","token","ordersToProcess","filter","order","status","loadOrders","_id","then","data","error","console","log","loadStatusValues","showOrdersLength","length","showInput","key","value","handleStatusChange","e","orderId","target","showStatus","o","map","index","CustomizedTables","classes","oIndex","createdAt","fromNow","ShipName","ShipAddress","ShipCity","ShipState","ShipZip","totalPrice","toFixed","method","orderItems","p","pIndex","padding","border","name","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,SAA9B;AACA,SAAQC,UAAR,EAAoBC,eAApB,EAAqCC,iBAArC,QAA6D,mBAA7D;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,QAAR,QAAuB,0BAAvB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,MAAMC,eAAe,GAAGT,UAAU,CAAEU,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADlC;AAEJC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAFxB,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALqC,CAAZ,CAAD,CAAV,CAQlBf,SARkB,CAAxB;AAUE,MAAMgB,cAAc,GAAGpB,UAAU,CAAEU,KAAD,KAAY;AAC5CW,EAAAA,IAAI,EAAE;AACJ,0BAAsB;AACpBT,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcS,MAAd,CAAqBC;AADlB;AADlB;AADsC,CAAZ,CAAD,CAAV,CAMnBhB,QANmB,CAAvB;AAQA,MAAMiB,SAAS,GAAGvB,UAAU,CAAC;AAC3BwB,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;AAMF,MAAMC,cAAc,GAAGlC,MAAM,CAACmC,GAAI;;;CAAlC;;AAKA,SAASC,WAAT,GAAuB;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB3C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC4C,YAAD,EAAeC,eAAf,IAAkC7C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAC8C,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBzC,eAAe,EAArC;AAEA,QAAM0C,eAAe,GAAGN,MAAM,CAACO,MAAP,CACnBC,KAAD,IAAYA,KAAK,CAACC,MAAN,KAAiB,WAAjB,IAAgCD,KAAK,CAACC,MAAN,KAAgB,WADxC,CAAxB;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACrB7C,IAAAA,UAAU,CAACuC,IAAI,CAACO,GAAN,EAAWN,KAAX,CAAV,CAA4BO,IAA5B,CAAiCC,IAAI,IAAI;AACrC,UAAGA,IAAI,CAACC,KAAR,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,OAFD,MAEO;AACHb,QAAAA,SAAS,CAACY,IAAD,CAAT;AACH;AACJ,KAND;AAOH,GARD;;AAUA,QAAMI,gBAAgB,GAAG,MAAM;AAC3BnD,IAAAA,eAAe,CAACsC,IAAI,CAACO,GAAN,EAAWN,KAAX,CAAf,CAAiCO,IAAjC,CAAsCC,IAAI,IAAI;AAC1C,UAAGA,IAAI,CAACC,KAAR,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,OAFD,MAEO;AACHX,QAAAA,eAAe,CAACU,IAAD,CAAf;AACH;AACJ,KAND;AAOH,GARD;;AAUAtD,EAAAA,SAAS,CAAC,MAAI;AACVmD,IAAAA,UAAU;AACVO,IAAAA,gBAAgB;AACnB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAGlB,MAAM,CAACmB,MAAP,GAAc,CAAjB,EAAmB;AACf,0BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBb,eAAe,CAACa,MADnC,CADJ;AAKH,KAND,MAMO;AACH,0BAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;AACJ,GAVD;;AAYA,QAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,kBACd;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCD,GAAnC,CADJ,CADJ,eAKI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,KAAK,EAAEC,KAFP;AAGA,IAAA,SAAS,EAAC,cAHV;AAIA,IAAA,QAAQ,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;;AAeA,QAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAIC,OAAJ,KAAgB;AACvC1D,IAAAA,iBAAiB,CAACqC,IAAI,CAACO,GAAN,EAAWN,KAAX,EAAkBoB,OAAlB,EAA2BD,CAAC,CAACE,MAAF,CAASJ,KAApC,CAAjB,CAA4DV,IAA5D,CAAiEC,IAAI,IAAI;AACrE,UAAGA,IAAI,CAACC,KAAR,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,OAFD,MAEK;AACDN,QAAAA,UAAU;AACb;AACJ,KAND;AAOH,GARD;;AAUA,QAAMiB,UAAU,GAAIC,CAAD,iBACf;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmCA,CAAC,CAACnB,MAArC,CADJ,eAEI;AACA,IAAA,SAAS,EAAC,cADV;AAEA,IAAA,QAAQ,EAAEe,CAAC,IAAID,kBAAkB,CAACC,CAAD,EAAII,CAAC,CAACjB,GAAN,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAIKT,YAAY,CAAC2B,GAAb,CAAiB,CAACpB,MAAD,EAASqB,KAAT,kBACd;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAErB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,MADD,CADH,CAJL,MAFJ,CADJ;;AAgBA,WAASsB,gBAAT,GAA4B;AACxB,UAAMC,OAAO,GAAGtC,SAAS,EAAzB;AAEF,wBACE,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAEhB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEsD,OAAO,CAACrC,KAA1B;AAAiC,oBAAW,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,eAOE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,eASE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CADF,CADF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,eAAe,CAACuB,GAAhB,CAAoB,CAACD,CAAD,EAAIK,MAAJ,kBACnB,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,IAA3B;AAAgC,MAAA,KAAK,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,CAAC,CAACjB,GADL,CADF,eAIE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC3C,MAAM,CAAC4D,CAAC,CAACM,SAAH,CAAN,CAAoBC,OAApB,EAAhC,CAJF,eAKE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,CAAC,CAACQ,QAAlC,CALF,eAMF,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMR,CAAC,CAACS,WAAR,EAAqB,GAArB,EAA0BT,CAAC,CAACU,QAA5B,EAAsC,GAAtC,EAA2CV,CAAC,CAACW,SAA7C,EAAwD,GAAxD,EAA6DX,CAAC,CAACY,OAA/D,CADF,CANE,eAQE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,GAAhC,EAAqCZ,CAAC,CAACa,UAAF,CAAaC,OAAb,CAAqB,CAArB,CAArC,CARF,eASE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCd,CAAC,CAACe,MAAlC,CATF,eAUE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgChB,UAAU,CAACC,CAAD,CAA1C,CAVF,eAWE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,CAAC,CAACgB,UAAF,CAAaf,GAAb,CAAkB,CAACgB,CAAD,EAAIC,MAAJ,kBAChC;AACA,MAAA,SAAS,EAAC,MADV;AAEA,MAAA,GAAG,EAAEA,MAFL;AAGA,MAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,MAAM,EAAE;AAFL,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMM,gBAAgBH,CAAC,CAACI,IANxB,EADc,CAAhC,CAXF,eAqBgB,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCrB,CAAC,CAACgB,UAAF,CAAaf,GAAb,CAAkB,CAACgB,CAAD,EAAIC,MAAJ,kBAC9C;AACA,MAAA,SAAS,EAAC,MADV;AAEA,MAAA,GAAG,EAAEA,MAFL;AAGA,MAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,MAAM,EAAE;AAFL,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMM,oBAAoBH,CAAC,CAACK,QAN5B,EAD4B,CAAhC,CArBhB,CADD,CADH,CAdF,CADF,CADF;AAuDD;;AAEL,sBACA,uDACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIChC,gBAAgB,EAJjB,EAKCa,gBAAgB,EALjB,OADA;AA8CH;;AAED,eAAehC,WAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {Navbar} from '../Navar/Navbar';\nimport {Banner} from \"../Banner/Banner\";\nimport {GlobalStyle} from \"../Styles/GlobalStyle\";\nimport styled from 'styled-components';\nimport {isAuthenticated} from '../auth';\nimport {listOrders, getStatusValues, updateOrderStatus} from \"../admin/adminApi\";\nimport moment from 'moment';\nimport {getPrice} from \"../FoodDialog/FoodDialog\";\n//import Table from 'react-bootstrap/Table'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n  });\n\nconst OrderContainer = styled.div`\n    padding: 10px 0px;\n    border-bottom: 1px solid grey;\n`\n\nfunction AdminOrders() {\n        const [orders, setOrders] = useState([]);\n        const [statusValues, setStatusValues] = useState([]);\n        const {user, token} = isAuthenticated();\n    \n        const ordersToProcess = orders.filter(\n            (order) => (order.status !== 'Completed' && order.status!== 'Cancelled'))\n            \n        const loadOrders = () => {\n            listOrders(user._id, token).then(data => {\n                if(data.error){\n                    console.log(data.error);\n                } else {\n                    setOrders(data);\n                }\n            });\n        };\n    \n        const loadStatusValues = () => {\n            getStatusValues(user._id, token).then(data => {\n                if(data.error){\n                    console.log(data.error);\n                } else {\n                    setStatusValues(data);\n                }\n            });\n        };\n    \n        useEffect(()=>{\n            loadOrders();\n            loadStatusValues();\n        }, []);\n    \n        const showOrdersLength = () => {\n            if(orders.length>0){\n                return(\n                    <h1 className=\"text-danger\">\n                        Total Orders: {ordersToProcess.length}\n                        </h1>\n                );\n            } else {\n                return <h1 className=\"text-danger\">No orders</h1>;\n            }\n        };\n    \n        const showInput = (key, value) => (\n            <div className=\"input-group mb-2 mr-sm-2\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">{key}\n                    </div>\n                </div>\n                <input \n                type=\"text\" \n                value={value} \n                className=\"form-control\" \n                readOnly>\n                </input>\n            </div>\n     );\n    \n        const handleStatusChange = (e, orderId) => {\n            updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n                if(data.error){\n                    console.log('Status update failed')\n                }else{\n                    loadOrders();\n                }\n            });\n        };\n            \n        const showStatus = (o) => (\n            <div className=\"form-group\">\n                <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n                <select \n                className=\"form-control\" \n                onChange={e => handleStatusChange(e, o._id)}>\n                    <option>Update Status</option>\n                    {statusValues.map((status, index) => (\n                        <option key={index} value={status}>\n                        {status}\n                        </option>\n                        ))};\n                </select>\n            </div>\n        );\n\n        function CustomizedTables() {\n            const classes = useStyles();\n            \n          return (\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>Order #</StyledTableCell>\n                    <StyledTableCell align=\"right\">Date</StyledTableCell>\n                    <StyledTableCell align=\"right\">Name</StyledTableCell>\n                    <StyledTableCell align=\"right\">Delivery Address</StyledTableCell>\n                    <StyledTableCell align=\"right\">Total</StyledTableCell>\n                    <StyledTableCell align=\"right\">Delivery Method</StyledTableCell>\n                    <StyledTableCell align=\"right\">Status</StyledTableCell>\n                    <StyledTableCell align=\"right\">Items</StyledTableCell>\n                    <StyledTableCell align=\"right\">Quantity</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {ordersToProcess.map((o, oIndex)  => (\n                    <StyledTableRow key={oIndex}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {o._id}\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">{moment(o.createdAt).fromNow()}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{o.ShipName}</StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    <div>{o.ShipAddress}{\" \"}{o.ShipCity}{\" \"}{o.ShipState}{\" \"}{o.ShipZip}</div></StyledTableCell>\n                      <StyledTableCell align=\"right\">{'$'}{o.totalPrice.toFixed(2)}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{o.method}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{showStatus(o)}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{o.orderItems.map ((p, pIndex) => (\n                                        <div \n                                        className=\"mb-4\" \n                                        key={pIndex} \n                                        style={{\n                                            padding: '5px', \n                                            border: '1px solid indigo'}}>\n                                            {('Product name', p.name)}\n                                        </div>\n                                    ))}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{o.orderItems.map ((p, pIndex) => (\n                                        <div \n                                        className=\"mb-4\" \n                                        key={pIndex} \n                                        style={{\n                                            padding: '5px', \n                                            border: '1px solid indigo'}}>\n                                            {('Product Quantity', p.quantity)}\n                                        </div>\n                                    ))}</StyledTableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          );\n        }\n\n    return (\n    <>\n    <GlobalStyle/>\n    <Navbar/>\n    <Banner/>\n    {showOrdersLength()}\n    {CustomizedTables()}\n                    {/* <Table striped bordered hover>                       \n                     <thead >\n                            <tr >\n                            <th>ID</th>\n                            <th>Date</th>\n                            <th>Name</th>\n                            <th>Total</th>\n                            <th>Delivery Method</th>\n                            <th>Status</th>\n                            <th>Items</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                                {ordersToProcess.map((o, oIndex) => <tr key={oIndex}>\n                                    <td>{o._id}</td>\n                                    <td>{moment(o.createdAt).fromNow()}</td>\n                                    <td>{o.user.name}</td>\n                                    <td>{'$'}{o.totalPrice.toFixed(2)}</td>\n                                    <td>{o.method}</td>\n                                    <td>{showStatus(o)}</td>\n                                    <td>\n                                    {o.orderItems.map ((p, pIndex) => (\n                                        <div \n                                        className=\"mb-4\" \n                                        key={pIndex} \n                                        style={{\n                                            padding: '5px', \n                                            border: '1px solid indigo'}}>\n                                            {showInput('Product name', p.name)}\n                                            {showInput('Product total', p.quantity)}\n                                        </div>\n                                    ))}\n                                    </td>\n                                </tr>)}\n                            </tbody>\n                    </Table>             */}\n        );\n   </>\n  );\n}\n\nexport default AdminOrders;\n"]},"metadata":{},"sourceType":"module"}