{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/auth/AdminRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated() && isAuthenticated().user.role === 1 ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/signin',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}));\n\nexport default AdminRoute;","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/auth/AdminRoute.js"],"names":["React","Component","Route","Redirect","isAuthenticated","AdminRoute","component","rest","props","user","role","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,eAAR,QAA8B,SAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEL,SAAZ;AAAuB,KAAGM;AAA1B,CAAD,kBACf,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAIJ,eAAe,MAAMA,eAAe,GAAGK,IAAlB,CAAuBC,IAAvB,KAAgC,CAArD,gBAC9B,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD8B,gBAG9B,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACVG,MAAAA,QAAQ,EAAE,SADA;AAEVC,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb;AAFI,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAWA,eAAeT,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {isAuthenticated} from './index';\n\nconst AdminRoute = ({component: Component, ...rest})=> (\n    <Route {...rest} render={props => isAuthenticated() && isAuthenticated().user.role === 1 ? (\n        <Component {...props}/>\n    ): (\n        <Redirect to={{\n            pathname: '/signin', \n            state:{from: props.location}\n        }}/>\n    )}/>\n)\n\nexport default AdminRoute;"]},"metadata":{},"sourceType":"module"}