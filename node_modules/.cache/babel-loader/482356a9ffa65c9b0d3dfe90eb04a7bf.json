{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/FoodDialog/FoodDialog.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FoodLabel } from \"../Menu/FoodGrid\";\nimport { seaBlue } from '../Styles/colors';\nimport { Title } from '../Styles/title';\nimport { formatPrice } from \"../Data/FoodData\";\nimport { QuantityInput } from \"./QuantityInput\";\nimport { useQuantity } from \"../Hooks/useQuantity\";\nimport { Toppings } from \"./Toppings\";\nimport { useToppings } from \"../Hooks/useToppings\";\nconst Dialog = styled.div`\n    width: 500px;\n    background-color: white;\n    position: fixed;\n    top: 75px;\n    z-index: 5;\n    max-height: calc(100% - 100px);\n    left: calc(50% - 250px);\n    display: flex;\n    flex-direction: column;\n`;\nconst DialogShadow = styled.div`\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    top: 0px;\n    background-color: black;\n    opacity: 0.7;\n    z-index: 4;\n`;\nconst DialogBanner = styled.div`\nmin-height: 200px;\nmargin-bottom: 20px;\n${({\n  img\n}) => `background-image: url(${img});`}\nbackground-position: center;\nbackground-size: cover;\n`;\nconst DialogBannerName = styled(FoodLabel)`\n    top: 100px;\n    font-size: 30px;\n    padding: 5px 40px;\n`;\nexport function getPrice(order) {\n  return order.quantity * order.price;\n} //overflow auto adds the scroll bar to the dialog content area if needed\n\nexport const DialogContent = styled.div`\noverflow: auto; \nmin-height: 100px;\npadding: 0px 40px;\n`;\nexport const DialogFooter = styled.div`\nbox-shadow: 0px -2px 10px 0px grey;\nheight: 60px;\ndisplay: flex;\njustify-content: center;\n`;\nexport const ConfirmButton = styled(Title)`\nmargin: 10px;\ncolor: white;\nheight: 20px;\nborder-radius: 5px;\npadding: 10px;\ntext-align: center;\nwidth: 200px;\ncursor: pointer;\nbackground-color: ${seaBlue};\n`;\n\nfunction hasToppings(food) {\n  return food.category === 'Pizza';\n}\n\nfunction FoodDialogContainer({\n  openFood,\n  setOpenFood,\n  setOrders,\n  orders\n}) {\n  const quantity = useQuantity(openFood && openFood.quantity);\n  const toppings = useToppings(openFood.toppings);\n\n  function close() {\n    setOpenFood();\n  }\n\n  const order = { ...openFood,\n    quantity: quantity.value,\n    toppings: topping.toppings\n  };\n\n  function addToOrder() {\n    setOrders([...orders, order]);\n    close();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogShadow, {\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogBanner, {\n    img: openFood.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogBannerName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, openFood.name)), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(QuantityInput, {\n    quantity: quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), hasToppings(openFood) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Add Toppings:\"), /*#__PURE__*/React.createElement(Toppings, Object.assign({}, Toppings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmButton, {\n    onClick: addToOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, \"Add to order: \", formatPrice(getPrice(order))))));\n}\n\nexport function FoodDialog(props) {\n  if (!props.openFood) return null;\n  return /*#__PURE__*/React.createElement(FoodDialogContainer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/FoodDialog/FoodDialog.js"],"names":["React","styled","FoodLabel","seaBlue","Title","formatPrice","QuantityInput","useQuantity","Toppings","useToppings","Dialog","div","DialogShadow","DialogBanner","img","DialogBannerName","getPrice","order","quantity","price","DialogContent","DialogFooter","ConfirmButton","hasToppings","food","category","FoodDialogContainer","openFood","setOpenFood","setOrders","orders","toppings","close","value","topping","addToOrder","name","FoodDialog","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {FoodLabel} from \"../Menu/FoodGrid\";\nimport {seaBlue} from '../Styles/colors';\nimport {Title} from '../Styles/title';\nimport {formatPrice} from \"../Data/FoodData\";\nimport {QuantityInput} from \"./QuantityInput\";\nimport {useQuantity} from \"../Hooks/useQuantity\";\nimport {Toppings} from \"./Toppings\";\nimport {useToppings} from \"../Hooks/useToppings\";\n\nconst Dialog = styled.div`\n    width: 500px;\n    background-color: white;\n    position: fixed;\n    top: 75px;\n    z-index: 5;\n    max-height: calc(100% - 100px);\n    left: calc(50% - 250px);\n    display: flex;\n    flex-direction: column;\n`;\nconst DialogShadow = styled.div`\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    top: 0px;\n    background-color: black;\n    opacity: 0.7;\n    z-index: 4;\n`;\n\nconst DialogBanner = styled.div`\nmin-height: 200px;\nmargin-bottom: 20px;\n${({img}) => `background-image: url(${img});`}\nbackground-position: center;\nbackground-size: cover;\n`;\n\nconst DialogBannerName = styled(FoodLabel)`\n    top: 100px;\n    font-size: 30px;\n    padding: 5px 40px;\n`;\n\nexport function getPrice(order){\n    return order.quantity * order.price;\n}\n//overflow auto adds the scroll bar to the dialog content area if needed\nexport const DialogContent = styled.div`\noverflow: auto; \nmin-height: 100px;\npadding: 0px 40px;\n`;\n\nexport const DialogFooter = styled.div`\nbox-shadow: 0px -2px 10px 0px grey;\nheight: 60px;\ndisplay: flex;\njustify-content: center;\n`;\n\nexport const ConfirmButton = styled(Title)`\nmargin: 10px;\ncolor: white;\nheight: 20px;\nborder-radius: 5px;\npadding: 10px;\ntext-align: center;\nwidth: 200px;\ncursor: pointer;\nbackground-color: ${seaBlue};\n`;\n\nfunction hasToppings(food){\n    return food.category === 'Pizza';\n}\n\nfunction FoodDialogContainer({openFood, setOpenFood, setOrders, orders}){\n    const quantity = useQuantity (openFood && openFood.quantity);\n    const toppings = useToppings(openFood.toppings);\n    function close() {\n        setOpenFood();\n    }\n\n    const order ={\n        ...openFood,\n        quantity: quantity.value,\n        toppings: topping.toppings\n    };\n\n    function addToOrder(){\n        setOrders([...orders, order]);\n        close();\n    }\n    return (\n    <>\n    <DialogShadow onClick={close}/>\n    <Dialog> \n    <DialogBanner img={openFood.img}>\n        <DialogBannerName>{openFood.name}</DialogBannerName>\n    </DialogBanner>\n    <DialogContent>\n        <QuantityInput quantity={quantity}/>\n        {hasToppings(openFood) && \n        <>\n            <h3>Add Toppings:</h3>\n            <Toppings {...Toppings}/>\n        </>}\n        \n    </DialogContent>\n    <DialogFooter>\n    <ConfirmButton onClick={addToOrder}>Add to order: {formatPrice(getPrice(order))}</ConfirmButton>\n    </DialogFooter>\n    </Dialog>\n    </>\n    );\n}\n\nexport function FoodDialog(props){\n    if(!props.openFood) return null;\n    return <FoodDialogContainer {...props}/>\n}"]},"metadata":{},"sourceType":"module"}