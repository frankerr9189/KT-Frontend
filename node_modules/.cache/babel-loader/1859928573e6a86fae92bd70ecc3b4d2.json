{"ast":null,"code":"var _jsxFileName = \"/Users/KerrFamily/Desktop/FoodApp/src/user/cart.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { DialogContent, DialogFooter, DialogBanner, DialogBannerName, ConfirmButton } from \"../FoodDialog/FoodDialog\";\nimport { formatPrice } from \"../Data/FoodData\";\nimport { getPrice } from \"../FoodDialog/FoodDialog\";\nimport { FoodLabel } from \"../Menu/FoodGrid\";\nimport { API } from \"../config\";\nconst CartStyled = styled.div`\ntop: 300px;\nwidth: 600px;\nbackground-color: white;\nheight: 300px;\nz-index: 10;\nbox-shadow: 4px 0px 5px 4px grey;\ndisplay: flex;\nflex-direction: column;\n`;\nconst CartContent = styled(DialogContent)`\npadding: 20px;\nheight: 100%\n`;\nconst CartContainer = styled.div`\n    padding: 10px 0px;\n    border-bottom: 1px solid grey;\n    ${({\n  editable\n}) => editable ? `\n&:hover {\n    cursor: pointer;\n    background-color: #e7e7e7;\n}\n` : `\n    pointer-events: none;\n    `}\n`;\nconst CartItem = styled.div`\n    padding: 10px 0px;\n    display: grid;\n    grid-template-columns: 20px 150px 20px 60px;\n    justify-content: space-between;\n`;\nexport const CartBanner = styled.div`\nmin-height: 50px;\nmargin-bottom: 20px;\nbackground-image: url(\"img/shark.jpeg\");\nbackground-position: center;\nbackground-size: cover;\n`;\nexport const CartBannerName = styled(FoodLabel)`\n    font-size: 30px;\n    padding: 5px 40px;\n    \n`;\nconst DetailItem = styled.div`\n    color: gray;\n    font-size: 10px;\n`;\nexport function Cart() {\n  // const subtotal = orders.reduce((total, order) => {\n  //     return total + getPrice(order);\n  // }, 0);\n  // const tax = subtotal * 0.07;\n  // const processingFee = (tax + subtotal) * 0.05;\n  // const total = subtotal + tax + processingFee;\n  const [items, setItems] = useState([]);\n  const [run, setRun] = useState(false);\n  useEffect(() => {\n    setItems(getCart());\n  }, [run]);\n\n  const showItems = items => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Your cart has \", `${items.length}`, \" items.\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), items.map((product, i) => /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      product: product,\n      showAddToCartButton: false,\n      cartUpdate: true,\n      showRemoveProductButton: true,\n      setRun: setRun,\n      run: run,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(CartStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CartContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartBanner, {\n    img: `${API}/product/photo/shark.jpeg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartBannerName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Summary\")), /*#__PURE__*/React.createElement(CartContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, showItems())));\n}","map":{"version":3,"sources":["/Users/KerrFamily/Desktop/FoodApp/src/user/cart.js"],"names":["React","styled","DialogContent","DialogFooter","DialogBanner","DialogBannerName","ConfirmButton","formatPrice","getPrice","FoodLabel","API","CartStyled","div","CartContent","CartContainer","editable","CartItem","CartBanner","CartBannerName","DetailItem","Cart","items","setItems","useState","run","setRun","useEffect","getCart","showItems","length","map","product","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,aAAR,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,gBAAnD,EAAqEC,aAArE,QAAyF,0BAAzF;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,MAAMC,UAAU,GAAGV,MAAM,CAACW,GAAI;;;;;;;;;CAA9B;AAWA,MAAMC,WAAW,GAAGZ,MAAM,CAACC,aAAD,CAAgB;;;CAA1C;AAKA,MAAMY,aAAa,GAAGb,MAAM,CAACW,GAAI;;;MAG3B,CAAC;AAACG,EAAAA;AAAD,CAAD,KACNA,QAAQ,GAAI;;;;;CAAJ,GAMD;;KAED;CAZN;AAeA,MAAMC,QAAQ,GAAGf,MAAM,CAACW,GAAI;;;;;CAA5B;AAMA,OAAO,MAAMK,UAAU,GAAGhB,MAAM,CAACW,GAAI;;;;;;CAA9B;AAOP,OAAO,MAAMM,cAAc,GAAGjB,MAAM,CAACQ,SAAD,CAAY;;;;CAAzC;AAMP,MAAMU,UAAU,GAAGlB,MAAM,CAACW,GAAI;;;CAA9B;AAKA,OAAO,SAASQ,IAAT,GAAgB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBF,QAAQ,CAAC,KAAD,CAA9B;AAEAG,EAAAA,SAAS,CAAC,MAAK;AACXJ,IAAAA,QAAQ,CAACK,OAAO,EAAR,CAAR;AACH,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT;;AAIA,QAAMI,SAAS,GAAGP,KAAK,IAAI;AACvB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoB,GAAEA,KAAK,CAACQ,MAAO,EAAnC,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKR,KAAK,CAACS,GAAN,CAAU,CAACC,OAAD,EAAUC,CAAV,kBACX,oBAAC,IAAD;AACA,MAAA,GAAG,EAAGA,CADN;AAEA,MAAA,OAAO,EAAED,OAFT;AAGA,MAAA,mBAAmB,EAAE,KAHrB;AAIA,MAAA,UAAU,EAAE,IAJZ;AAKA,MAAA,uBAAuB,EAAE,IALzB;AAMA,MAAA,MAAM,EAAEN,MANR;AAOA,MAAA,GAAG,EAAED,GAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CAHL,CADJ;AAiBH,GAlBD;;AAqBA,sBAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAG,GAAEd,GAAI,2BAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADA,eAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKkB,SAAS,EADd,CAJJ,CADO,CAAP;AAUH","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {DialogContent, DialogFooter, DialogBanner, DialogBannerName, ConfirmButton} from \"../FoodDialog/FoodDialog\";\nimport {formatPrice} from \"../Data/FoodData\";\nimport {getPrice} from \"../FoodDialog/FoodDialog\";\nimport {FoodLabel} from \"../Menu/FoodGrid\";\nimport {API} from \"../config\";\n\nconst CartStyled = styled.div`\ntop: 300px;\nwidth: 600px;\nbackground-color: white;\nheight: 300px;\nz-index: 10;\nbox-shadow: 4px 0px 5px 4px grey;\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst CartContent = styled(DialogContent)`\npadding: 20px;\nheight: 100%\n`;\n\nconst CartContainer = styled.div`\n    padding: 10px 0px;\n    border-bottom: 1px solid grey;\n    ${({editable}) =>\neditable ? `\n&:hover {\n    cursor: pointer;\n    background-color: #e7e7e7;\n}\n`\n    : `\n    pointer-events: none;\n    `}\n`;\n\nconst CartItem = styled.div`\n    padding: 10px 0px;\n    display: grid;\n    grid-template-columns: 20px 150px 20px 60px;\n    justify-content: space-between;\n`;\nexport const CartBanner = styled.div`\nmin-height: 50px;\nmargin-bottom: 20px;\nbackground-image: url(\"img/shark.jpeg\");\nbackground-position: center;\nbackground-size: cover;\n`;\nexport const CartBannerName = styled(FoodLabel)`\n    font-size: 30px;\n    padding: 5px 40px;\n    \n`;\n\nconst DetailItem = styled.div`\n    color: gray;\n    font-size: 10px;\n`\n\nexport function Cart() {\n    // const subtotal = orders.reduce((total, order) => {\n    //     return total + getPrice(order);\n    // }, 0);\n    // const tax = subtotal * 0.07;\n    // const processingFee = (tax + subtotal) * 0.05;\n    // const total = subtotal + tax + processingFee;\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n\n    useEffect(()=> {\n        setItems(getCart());\n    }, [run]);\n\n    const showItems = items => {\n        return(\n            <div>\n                <h2>Your cart has {`${items.length}`} items.</h2>\n                <hr/>\n                {items.map((product, i)=> (\n                <Card \n                key ={i} \n                product={product}\n                showAddToCartButton={false}\n                cartUpdate={true}\n                showRemoveProductButton={true}\n                setRun={setRun}\n                run={run}\n                />\n                ))}\n            </div>\n        );\n    };\n    \n\n    return <CartStyled>\n    <CartContainer>\n    <CartBanner img={`${API}/product/photo/shark.jpeg`}>\n        <CartBannerName>Summary</CartBannerName>\n    </CartBanner>\n        <CartContent>\n            {showItems()}\n        </CartContent>\n    </CartContainer>\n    </CartStyled>\n}"]},"metadata":{},"sourceType":"module"}